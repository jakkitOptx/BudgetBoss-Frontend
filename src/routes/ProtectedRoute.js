// ProtectedRoute.js
import React from "react";
import { Navigate } from "react-router-dom";
import { jwtDecode } from 'jwt-decode';

const ProtectedRoute = ({ children }) => {
  const token = localStorage.getItem("token");

  if (!token) {
    return <Navigate to="/login" replace />;
  }

  try {
    const decodedToken = jwtDecode(token);
    const currentTime = Date.now() / 1000; // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    if (decodedToken.exp < currentTime) {
      // üî• Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå localStorage ‡πÅ‡∏•‡∏∞ Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
      localStorage.removeItem("token");
      localStorage.removeItem("user");
      return <Navigate to="/login" replace />;
    }
  } catch (error) {
    console.error("Invalid token:", error);
    localStorage.removeItem("token");
    localStorage.removeItem("user");
    return <Navigate to="/login" replace />;
  }

  return children;
};

export default ProtectedRoute;
